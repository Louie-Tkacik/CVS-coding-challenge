// Generated by Dagger (https://dagger.dev).
package com.tkacik.cvs.di;

import com.tkacik.cvs.data.remote.service.FlickrService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvidesFlickrServiceFactory implements Factory<FlickrService> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvidesFlickrServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public FlickrService get() {
    return providesFlickrService(retrofitProvider.get());
  }

  public static NetworkModule_ProvidesFlickrServiceFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvidesFlickrServiceFactory(retrofitProvider);
  }

  public static FlickrService providesFlickrService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.providesFlickrService(retrofit));
  }
}
