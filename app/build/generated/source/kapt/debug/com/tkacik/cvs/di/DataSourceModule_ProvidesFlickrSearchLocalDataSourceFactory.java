// Generated by Dagger (https://dagger.dev).
package com.tkacik.cvs.di;

import com.tkacik.cvs.data.local.database.FlickrDao;
import com.tkacik.cvs.data.local.datasource.FlickrSearchLocalDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataSourceModule_ProvidesFlickrSearchLocalDataSourceFactory implements Factory<FlickrSearchLocalDataSource> {
  private final Provider<FlickrDao> flickrDaoProvider;

  public DataSourceModule_ProvidesFlickrSearchLocalDataSourceFactory(
      Provider<FlickrDao> flickrDaoProvider) {
    this.flickrDaoProvider = flickrDaoProvider;
  }

  @Override
  public FlickrSearchLocalDataSource get() {
    return providesFlickrSearchLocalDataSource(flickrDaoProvider.get());
  }

  public static DataSourceModule_ProvidesFlickrSearchLocalDataSourceFactory create(
      Provider<FlickrDao> flickrDaoProvider) {
    return new DataSourceModule_ProvidesFlickrSearchLocalDataSourceFactory(flickrDaoProvider);
  }

  public static FlickrSearchLocalDataSource providesFlickrSearchLocalDataSource(
      FlickrDao flickrDao) {
    return Preconditions.checkNotNullFromProvides(DataSourceModule.INSTANCE.providesFlickrSearchLocalDataSource(flickrDao));
  }
}
